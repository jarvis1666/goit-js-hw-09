{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACT,IAAMC,EAAS,CAAET,WAAUC,SAEvBI,EACFF,EAAQM,GAERL,EAAOK,E,GAERR,E,IAIPS,SAASC,cAAc,SAASC,iBAAiB,UAAU,SAAUC,GACnEA,EAAMC,iBAEN,IAAMC,EAAaC,SAASC,KAAKC,SAASjB,MAAMkB,OAC1CC,EAAOJ,SAASC,KAAKC,SAASE,KAAKD,OACnCE,EAASL,SAASC,KAAKC,SAASG,OAAOF,OAC7C,GACEG,MAAMP,IACNO,MAAMF,IACNE,MAAMD,IACNN,GAAc,GACdK,GAAQ,GACRC,GAAU,EAEVE,EAAA1B,GAAS2B,OAAOC,QACd,0DAIJ,IAAK,IAAIC,EAAI,EAAGA,GAAKL,EAAQK,IAAK,CAGhC3B,EAAc2B,EAFOX,GAAcW,EAAI,GAAKN,GAGzCO,MAAK,SAAAC,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MACjBsB,EAAA1B,GAAS2B,OAAOK,QACd,uBAAwCC,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAGjD8B,OAAM,SAAAH,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MAClBsB,EAAA1B,GAAS2B,OAAOC,QACd,sBAAqCK,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      const result = { position, delay };\n\n      if (shouldResolve) {\n        resolve(result);\n      } else {\n        reject(result);\n      }\n    }, delay);\n  });\n}\n\ndocument.querySelector('.form').addEventListener('submit', function (event) {\n  event.preventDefault();\n\n  const firstDelay = parseInt(this.elements.delay.value);\n  const step = parseInt(this.elements.step.value);\n  const amount = parseInt(this.elements.amount.value);\n  if (\n    isNaN(firstDelay) ||\n    isNaN(step) ||\n    isNaN(amount) ||\n    firstDelay <= 0 ||\n    step <= 0 ||\n    amount <= 0\n  ) {\n    Notiflix.Notify.failure(\n      'Please enter valid numeric values greater than 0.'\n    );\n    return;\n  }\n  for (let i = 1; i <= amount; i++) {\n    const currentDelay = firstDelay + (i - 1) * step;\n\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n});\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","result","document","querySelector","addEventListener","event","preventDefault","firstDelay","parseInt","this","elements","value","step","amount","isNaN","$parcel$interopDefault","Notify","failure","i","then","param","success","concat","catch"],"version":3,"file":"03-promises.078d52c6.js.map"}